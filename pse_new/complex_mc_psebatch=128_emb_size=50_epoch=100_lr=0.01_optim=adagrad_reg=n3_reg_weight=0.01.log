./test2.py --data pse --mcl True --batch-size 128 --epochs 100 --embedding-size 50 --learning-rate 0.01 --regulariser n3 --reg-weight 0.01 --optimizer adagrad --valid --quiet
MCL True
INFO:test2.py:Valid: True
INFO:test2.py:Device: cuda
curr directory /home/acalvi/Dissertation/Aladdin/biolink
Importing dataset files ... 
<class 'biolink.embeddings.models_mc.ComplEx_MC'>
INFO:test2.py:is tucker False
INFO:test2.py:settin tucker to FALSE
INFO:test2.py:Device: cuda
INFO:test2.py:Epoch 1/100	Loss 11.3079 ± 0.3122
INFO:test2.py:Epoch 2/100	Loss 11.0024 ± 0.1151
INFO:test2.py:Epoch 3/100	Loss 10.9455 ± 0.1134
INFO:test2.py:Epoch 4/100	Loss 10.9141 ± 0.1128
INFO:test2.py:Epoch 5/100	Loss 10.8922 ± 0.1124
INFO:test2.py:Epoch 6/100	Loss 10.8755 ± 0.1133
INFO:test2.py:Epoch 7/100	Loss 10.8622 ± 0.1128
INFO:test2.py:Epoch 8/100	Loss 10.8510 ± 0.1126
INFO:test2.py:Epoch 9/100	Loss 10.8415 ± 0.1122
INFO:test2.py:Epoch 10/100	Loss 10.8331 ± 0.1123
INFO:test2.py:Epoch 11/100	Loss 10.8256 ± 0.1117
INFO:test2.py:Epoch 12/100	Loss 10.8187 ± 0.1124
INFO:test2.py:Epoch 13/100	Loss 10.8123 ± 0.1119
INFO:test2.py:Epoch 14/100	Loss 10.8063 ± 0.1118
INFO:test2.py:Epoch 15/100	Loss 10.8007 ± 0.1115
INFO:test2.py:Epoch 16/100	Loss 10.7954 ± 0.1114
INFO:test2.py:Epoch 17/100	Loss 10.7903 ± 0.1109
INFO:test2.py:Epoch 18/100	Loss 10.7854 ± 0.1121
INFO:test2.py:Epoch 19/100	Loss 10.7807 ± 0.1119
INFO:test2.py:Epoch 20/100	Loss 10.7762 ± 0.1117
INFO:test2.py:Epoch 21/100	Loss 10.7719 ± 0.1105
INFO:test2.py:Epoch 22/100	Loss 10.7678 ± 0.1109
INFO:test2.py:Epoch 23/100	Loss 10.7638 ± 0.1116
INFO:test2.py:Epoch 24/100	Loss 10.7599 ± 0.1121
INFO:test2.py:Epoch 25/100	Loss 10.7562 ± 0.1106
INFO:test2.py:Epoch 26/100	Loss 10.7527 ± 0.1103
INFO:test2.py:Epoch 27/100	Loss 10.7492 ± 0.1114
INFO:test2.py:Epoch 28/100	Loss 10.7459 ± 0.1112
INFO:test2.py:Epoch 29/100	Loss 10.7427 ± 0.1113
INFO:test2.py:Epoch 30/100	Loss 10.7395 ± 0.1111
INFO:test2.py:Epoch 31/100	Loss 10.7365 ± 0.1110
INFO:test2.py:Epoch 32/100	Loss 10.7336 ± 0.1112
INFO:test2.py:Epoch 33/100	Loss 10.7308 ± 0.1109
INFO:test2.py:Epoch 34/100	Loss 10.7281 ± 0.1101
INFO:test2.py:Epoch 35/100	Loss 10.7255 ± 0.1107
INFO:test2.py:Epoch 36/100	Loss 10.7229 ± 0.1104
INFO:test2.py:Epoch 37/100	Loss 10.7205 ± 0.1111
INFO:test2.py:Epoch 38/100	Loss 10.7181 ± 0.1105
INFO:test2.py:Epoch 39/100	Loss 10.7157 ± 0.1112
INFO:test2.py:Epoch 40/100	Loss 10.7135 ± 0.1105
INFO:test2.py:Epoch 41/100	Loss 10.7113 ± 0.1109
INFO:test2.py:Epoch 42/100	Loss 10.7092 ± 0.1115
INFO:test2.py:Epoch 43/100	Loss 10.7071 ± 0.1102
INFO:test2.py:Epoch 44/100	Loss 10.7051 ± 0.1114
INFO:test2.py:Epoch 45/100	Loss 10.7031 ± 0.1106
INFO:test2.py:Epoch 46/100	Loss 10.7012 ± 0.1108
INFO:test2.py:Epoch 47/100	Loss 10.6994 ± 0.1116
INFO:test2.py:Epoch 48/100	Loss 10.6976 ± 0.1107
INFO:test2.py:Epoch 49/100	Loss 10.6958 ± 0.1110
INFO:test2.py:Validating
INFO:test2.py:batch start 	80000
INFO:test2.py:batch start 	160000
INFO:test2.py:batch start 	240000
INFO:test2.py:batch start 	320000
INFO:test2.py:batch start 	400000
INFO:test2.py:done
INFO:test2.py:metrics done
INFO:test2.py:Epoch 50/100	Loss 10.6941 ± 0.1111
INFO:test2.py:Epoch 51/100	Loss 10.6924 ± 0.1106
INFO:test2.py:Epoch 52/100	Loss 10.6908 ± 0.1100
INFO:test2.py:Epoch 53/100	Loss 10.6892 ± 0.1112
INFO:test2.py:Epoch 54/100	Loss 10.6876 ± 0.1107
INFO:test2.py:Epoch 55/100	Loss 10.6861 ± 0.1101
INFO:test2.py:Epoch 56/100	Loss 10.6846 ± 0.1109
INFO:test2.py:Epoch 57/100	Loss 10.6832 ± 0.1108
INFO:test2.py:Epoch 58/100	Loss 10.6818 ± 0.1102
INFO:test2.py:Epoch 59/100	Loss 10.6804 ± 0.1111
INFO:test2.py:Epoch 60/100	Loss 10.6790 ± 0.1111
INFO:test2.py:Epoch 61/100	Loss 10.6777 ± 0.1108
INFO:test2.py:Epoch 62/100	Loss 10.6764 ± 0.1110
INFO:test2.py:Epoch 63/100	Loss 10.6751 ± 0.1113
INFO:test2.py:Epoch 64/100	Loss 10.6739 ± 0.1107
INFO:test2.py:Epoch 65/100	Loss 10.6727 ± 0.1109
INFO:test2.py:Epoch 66/100	Loss 10.6715 ± 0.1109
INFO:test2.py:Epoch 67/100	Loss 10.6703 ± 0.1106
INFO:test2.py:Epoch 68/100	Loss 10.6692 ± 0.1109
INFO:test2.py:Epoch 69/100	Loss 10.6681 ± 0.1114
INFO:test2.py:Epoch 70/100	Loss 10.6670 ± 0.1104
INFO:test2.py:Epoch 71/100	Loss 10.6659 ± 0.1100
INFO:test2.py:Epoch 72/100	Loss 10.6648 ± 0.1109
INFO:test2.py:Epoch 73/100	Loss 10.6638 ± 0.1101
INFO:test2.py:Epoch 74/100	Loss 10.6628 ± 0.1105
INFO:test2.py:Epoch 75/100	Loss 10.6618 ± 0.1094
INFO:test2.py:Epoch 76/100	Loss 10.6608 ± 0.1103
INFO:test2.py:Epoch 77/100	Loss 10.6598 ± 0.1102
INFO:test2.py:Epoch 78/100	Loss 10.6589 ± 0.1103
INFO:test2.py:Epoch 79/100	Loss 10.6580 ± 0.1105
INFO:test2.py:Epoch 80/100	Loss 10.6570 ± 0.1106
INFO:test2.py:Epoch 81/100	Loss 10.6561 ± 0.1100
INFO:test2.py:Epoch 82/100	Loss 10.6553 ± 0.1110
INFO:test2.py:Epoch 83/100	Loss 10.6544 ± 0.1107
INFO:test2.py:Epoch 84/100	Loss 10.6535 ± 0.1101
INFO:test2.py:Epoch 85/100	Loss 10.6527 ± 0.1100
INFO:test2.py:Epoch 86/100	Loss 10.6519 ± 0.1106
INFO:test2.py:Epoch 87/100	Loss 10.6511 ± 0.1102
INFO:test2.py:Epoch 88/100	Loss 10.6503 ± 0.1107
INFO:test2.py:Epoch 89/100	Loss 10.6495 ± 0.1104
INFO:test2.py:Epoch 90/100	Loss 10.6487 ± 0.1107
INFO:test2.py:Epoch 91/100	Loss 10.6480 ± 0.1103
INFO:test2.py:Epoch 92/100	Loss 10.6472 ± 0.1095
INFO:test2.py:Epoch 93/100	Loss 10.6465 ± 0.1094
INFO:test2.py:Epoch 94/100	Loss 10.6457 ± 0.1097
INFO:test2.py:Epoch 95/100	Loss 10.6450 ± 0.1091
INFO:test2.py:Epoch 96/100	Loss 10.6443 ± 0.1105
INFO:test2.py:Epoch 97/100	Loss 10.6436 ± 0.1103
INFO:test2.py:Epoch 98/100	Loss 10.6429 ± 0.1101
INFO:test2.py:Epoch 99/100	Loss 10.6423 ± 0.1095
INFO:test2.py:Epoch 100/100	Loss 10.6416 ± 0.1100
INFO:test2.py:is bad performing False
INFO:test2.py:Done training
INFO:test2.py:in evalute for dataset: 	valid
INFO:test2.py:batch start 	80000
INFO:test2.py:batch start 	160000
INFO:test2.py:batch start 	240000
INFO:test2.py:batch start 	320000
INFO:test2.py:batch start 	400000
INFO:test2.py:done
INFO:test2.py:metrics done
INFO:test2.py:Error 	valid results	MRR 0.113123	H@1 0.041650	H@3 0.102261	H@10 0.250288	AU-ROC_raw -1.000000	AU-ROC_fil -1.000000
INFO:test2.py:in evalute for dataset: 	test
INFO:test2.py:batch start 	80000
INFO:test2.py:batch start 	160000
INFO:test2.py:batch start 	240000
INFO:test2.py:batch start 	320000
INFO:test2.py:batch start 	400000
INFO:test2.py:done
INFO:test2.py:metrics done
INFO:test2.py:Error 	test results	MRR 0.113576	H@1 0.041672	H@3 0.103335	H@10 0.251344	AU-ROC_raw -1.000000	AU-ROC_fil -1.000000
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
