./test2.py --data pse --mcl True --batch-size 128 --epochs 100 --embedding-size 50 --learning-rate 0.1 --regulariser n3 --reg-weight 0.001 --optimizer adagrad --valid --quiet
MCL True
INFO:test2.py:Valid: True
INFO:test2.py:Device: cuda
curr directory /home/acalvi/Dissertation/Aladdin/biolink
Importing dataset files ... 
<class 'biolink.embeddings.models_mc.ComplEx_MC'>
INFO:test2.py:is tucker False
INFO:test2.py:settin tucker to FALSE
INFO:test2.py:Device: cuda
INFO:test2.py:Epoch 1/100	Loss 10.6718 ± 0.3036
INFO:test2.py:Epoch 2/100	Loss 10.3439 ± 0.1261
INFO:test2.py:Epoch 3/100	Loss 10.2647 ± 0.1239
INFO:test2.py:Epoch 4/100	Loss 10.2281 ± 0.1240
INFO:test2.py:Epoch 5/100	Loss 10.2062 ± 0.1229
INFO:test2.py:Epoch 6/100	Loss 10.1914 ± 0.1238
INFO:test2.py:Epoch 7/100	Loss 10.1804 ± 0.1233
INFO:test2.py:Epoch 8/100	Loss 10.1719 ± 0.1234
INFO:test2.py:Epoch 9/100	Loss 10.1650 ± 0.1225
INFO:test2.py:Epoch 10/100	Loss 10.1592 ± 0.1227
INFO:test2.py:Epoch 11/100	Loss 10.1544 ± 0.1216
INFO:test2.py:Epoch 12/100	Loss 10.1501 ± 0.1232
INFO:test2.py:Epoch 13/100	Loss 10.1465 ± 0.1231
INFO:test2.py:Epoch 14/100	Loss 10.1432 ± 0.1222
INFO:test2.py:Epoch 15/100	Loss 10.1403 ± 0.1228
INFO:test2.py:Epoch 16/100	Loss 10.1377 ± 0.1228
INFO:test2.py:Epoch 17/100	Loss 10.1352 ± 0.1233
INFO:test2.py:Epoch 18/100	Loss 10.1331 ± 0.1228
INFO:test2.py:Epoch 19/100	Loss 10.1311 ± 0.1228
INFO:test2.py:Epoch 20/100	Loss 10.1293 ± 0.1225
INFO:test2.py:Epoch 21/100	Loss 10.1275 ± 0.1220
INFO:test2.py:Epoch 22/100	Loss 10.1260 ± 0.1220
INFO:test2.py:Epoch 23/100	Loss 10.1244 ± 0.1225
INFO:test2.py:Epoch 24/100	Loss 10.1230 ± 0.1232
INFO:test2.py:Epoch 25/100	Loss 10.1217 ± 0.1219
INFO:test2.py:Epoch 26/100	Loss 10.1205 ± 0.1222
INFO:test2.py:Epoch 27/100	Loss 10.1193 ± 0.1222
INFO:test2.py:Epoch 28/100	Loss 10.1181 ± 0.1229
INFO:test2.py:Epoch 29/100	Loss 10.1171 ± 0.1223
INFO:test2.py:Epoch 30/100	Loss 10.1161 ± 0.1221
INFO:test2.py:Epoch 31/100	Loss 10.1152 ± 0.1225
INFO:test2.py:Epoch 32/100	Loss 10.1142 ± 0.1228
INFO:test2.py:Epoch 33/100	Loss 10.1133 ± 0.1222
INFO:test2.py:Epoch 34/100	Loss 10.1125 ± 0.1230
INFO:test2.py:Epoch 35/100	Loss 10.1117 ± 0.1221
INFO:test2.py:Epoch 36/100	Loss 10.1109 ± 0.1221
INFO:test2.py:Epoch 37/100	Loss 10.1102 ± 0.1221
INFO:test2.py:Epoch 38/100	Loss 10.1095 ± 0.1213
INFO:test2.py:Epoch 39/100	Loss 10.1088 ± 0.1219
INFO:test2.py:Epoch 40/100	Loss 10.1081 ± 0.1229
INFO:test2.py:Epoch 41/100	Loss 10.1075 ± 0.1224
INFO:test2.py:Epoch 42/100	Loss 10.1068 ± 0.1225
INFO:test2.py:Epoch 43/100	Loss 10.1062 ± 0.1224
INFO:test2.py:Epoch 44/100	Loss 10.1057 ± 0.1219
INFO:test2.py:Epoch 45/100	Loss 10.1051 ± 0.1220
INFO:test2.py:Epoch 46/100	Loss 10.1046 ± 0.1215
INFO:test2.py:Epoch 47/100	Loss 10.1041 ± 0.1224
INFO:test2.py:Epoch 48/100	Loss 10.1035 ± 0.1221
INFO:test2.py:Epoch 49/100	Loss 10.1030 ± 0.1218
INFO:test2.py:Validating
INFO:test2.py:batch start 	80000
INFO:test2.py:batch start 	160000
INFO:test2.py:batch start 	240000
INFO:test2.py:batch start 	320000
INFO:test2.py:batch start 	400000
INFO:test2.py:done
INFO:test2.py:metrics done
INFO:test2.py:Epoch 50/100	Loss 10.1026 ± 0.1224
INFO:test2.py:Epoch 51/100	Loss 10.1021 ± 0.1222
INFO:test2.py:Epoch 52/100	Loss 10.1016 ± 0.1220
INFO:test2.py:Epoch 53/100	Loss 10.1012 ± 0.1223
INFO:test2.py:Epoch 54/100	Loss 10.1007 ± 0.1214
INFO:test2.py:Epoch 55/100	Loss 10.1003 ± 0.1224
INFO:test2.py:Epoch 56/100	Loss 10.0999 ± 0.1221
INFO:test2.py:Epoch 57/100	Loss 10.0995 ± 0.1213
INFO:test2.py:Epoch 58/100	Loss 10.0991 ± 0.1225
INFO:test2.py:Epoch 59/100	Loss 10.0987 ± 0.1224
INFO:test2.py:Epoch 60/100	Loss 10.0983 ± 0.1219
INFO:test2.py:Epoch 61/100	Loss 10.0980 ± 0.1226
INFO:test2.py:Epoch 62/100	Loss 10.0976 ± 0.1221
INFO:test2.py:Epoch 63/100	Loss 10.0972 ± 0.1222
INFO:test2.py:Epoch 64/100	Loss 10.0969 ± 0.1218
INFO:test2.py:Epoch 65/100	Loss 10.0965 ± 0.1220
INFO:test2.py:Epoch 66/100	Loss 10.0962 ± 0.1226
INFO:test2.py:Epoch 67/100	Loss 10.0959 ± 0.1222
INFO:test2.py:Epoch 68/100	Loss 10.0956 ± 0.1220
INFO:test2.py:Epoch 69/100	Loss 10.0953 ± 0.1225
INFO:test2.py:Epoch 70/100	Loss 10.0950 ± 0.1220
INFO:test2.py:Epoch 71/100	Loss 10.0947 ± 0.1221
INFO:test2.py:Epoch 72/100	Loss 10.0944 ± 0.1214
INFO:test2.py:Epoch 73/100	Loss 10.0941 ± 0.1221
INFO:test2.py:Epoch 74/100	Loss 10.0938 ± 0.1220
INFO:test2.py:Epoch 75/100	Loss 10.0935 ± 0.1218
INFO:test2.py:Epoch 76/100	Loss 10.0933 ± 0.1229
INFO:test2.py:Epoch 77/100	Loss 10.0930 ± 0.1215
INFO:test2.py:Epoch 78/100	Loss 10.0927 ± 0.1220
INFO:test2.py:Epoch 79/100	Loss 10.0925 ± 0.1219
INFO:test2.py:Epoch 80/100	Loss 10.0922 ± 0.1226
INFO:test2.py:Epoch 81/100	Loss 10.0920 ± 0.1216
INFO:test2.py:Epoch 82/100	Loss 10.0917 ± 0.1219
INFO:test2.py:Epoch 83/100	Loss 10.0915 ± 0.1216
INFO:test2.py:Epoch 84/100	Loss 10.0912 ± 0.1224
INFO:test2.py:Epoch 85/100	Loss 10.0910 ± 0.1211
INFO:test2.py:Epoch 86/100	Loss 10.0908 ± 0.1223
INFO:test2.py:Epoch 87/100	Loss 10.0906 ± 0.1214
INFO:test2.py:Epoch 88/100	Loss 10.0903 ± 0.1224
INFO:test2.py:Epoch 89/100	Loss 10.0901 ± 0.1222
INFO:test2.py:Epoch 90/100	Loss 10.0899 ± 0.1217
INFO:test2.py:Epoch 91/100	Loss 10.0897 ± 0.1213
INFO:test2.py:Epoch 92/100	Loss 10.0895 ± 0.1212
INFO:test2.py:Epoch 93/100	Loss 10.0893 ± 0.1216
INFO:test2.py:Epoch 94/100	Loss 10.0891 ± 0.1218
INFO:test2.py:Epoch 95/100	Loss 10.0889 ± 0.1211
INFO:test2.py:Epoch 96/100	Loss 10.0887 ± 0.1218
INFO:test2.py:Epoch 97/100	Loss 10.0885 ± 0.1221
INFO:test2.py:Epoch 98/100	Loss 10.0883 ± 0.1218
INFO:test2.py:Epoch 99/100	Loss 10.0881 ± 0.1215
INFO:test2.py:Epoch 100/100	Loss 10.0879 ± 0.1228
INFO:test2.py:is bad performing False
INFO:test2.py:Done training
INFO:test2.py:in evalute for dataset: 	valid
INFO:test2.py:batch start 	80000
INFO:test2.py:batch start 	160000
INFO:test2.py:batch start 	240000
INFO:test2.py:batch start 	320000
INFO:test2.py:batch start 	400000
INFO:test2.py:done
INFO:test2.py:metrics done
INFO:test2.py:Error 	valid results	MRR 0.128795	H@1 0.051430	H@3 0.120504	H@10 0.280437	AU-ROC_raw -1.000000	AU-ROC_fil -1.000000
INFO:test2.py:in evalute for dataset: 	test
INFO:test2.py:batch start 	80000
INFO:test2.py:batch start 	160000
INFO:test2.py:batch start 	240000
INFO:test2.py:batch start 	320000
INFO:test2.py:batch start 	400000
INFO:test2.py:done
INFO:test2.py:metrics done
INFO:test2.py:Error 	test results	MRR 0.129226	H@1 0.051684	H@3 0.121158	H@10 0.281139	AU-ROC_raw -1.000000	AU-ROC_fil -1.000000
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/home/acalvi/Dissertation/Aladdin/biolink/testing/experiment_ComplEx.py:184: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison
  if data == 'pse':
