./test2.py --data pse --mcl True --batch-size 128 --epochs 100 --embedding-size 100 --learning-rate 0.01 --regulariser n3 --reg-weight 0.01 --optimizer adagrad --valid --quiet
MCL True
INFO:test2.py:Valid: True
INFO:test2.py:Device: cuda
curr directory /home/acalvi/Dissertation/Aladdin/biolink
Importing dataset files ... 
<class 'biolink.embeddings.models_mc.ComplEx_MC'>
INFO:test2.py:is tucker False
INFO:test2.py:settin tucker to FALSE
INFO:test2.py:Device: cuda
INFO:test2.py:Epoch 1/100	Loss 11.2813 ± 0.3244
INFO:test2.py:Epoch 2/100	Loss 10.9514 ± 0.1169
INFO:test2.py:Epoch 3/100	Loss 10.8807 ± 0.1128
INFO:test2.py:Epoch 4/100	Loss 10.8440 ± 0.1126
INFO:test2.py:Epoch 5/100	Loss 10.8206 ± 0.1123
INFO:test2.py:Epoch 6/100	Loss 10.8034 ± 0.1120
INFO:test2.py:Epoch 7/100	Loss 10.7895 ± 0.1126
INFO:test2.py:Epoch 8/100	Loss 10.7778 ± 0.1126
INFO:test2.py:Epoch 9/100	Loss 10.7676 ± 0.1125
INFO:test2.py:Epoch 10/100	Loss 10.7584 ± 0.1130
INFO:test2.py:Epoch 11/100	Loss 10.7501 ± 0.1127
INFO:test2.py:Epoch 12/100	Loss 10.7425 ± 0.1119
INFO:test2.py:Epoch 13/100	Loss 10.7355 ± 0.1128
INFO:test2.py:Epoch 14/100	Loss 10.7289 ± 0.1119
INFO:test2.py:Epoch 15/100	Loss 10.7227 ± 0.1112
INFO:test2.py:Epoch 16/100	Loss 10.7169 ± 0.1113
INFO:test2.py:Epoch 17/100	Loss 10.7115 ± 0.1112
INFO:test2.py:Epoch 18/100	Loss 10.7063 ± 0.1122
INFO:test2.py:Epoch 19/100	Loss 10.7014 ± 0.1113
INFO:test2.py:Epoch 20/100	Loss 10.6967 ± 0.1121
INFO:test2.py:Epoch 21/100	Loss 10.6923 ± 0.1119
INFO:test2.py:Epoch 22/100	Loss 10.6880 ± 0.1116
INFO:test2.py:Epoch 23/100	Loss 10.6840 ± 0.1106
INFO:test2.py:Epoch 24/100	Loss 10.6801 ± 0.1111
INFO:test2.py:Epoch 25/100	Loss 10.6764 ± 0.1112
INFO:test2.py:Epoch 26/100	Loss 10.6728 ± 0.1113
INFO:test2.py:Epoch 27/100	Loss 10.6694 ± 0.1112
INFO:test2.py:Epoch 28/100	Loss 10.6661 ± 0.1110
INFO:test2.py:Epoch 29/100	Loss 10.6629 ± 0.1102
INFO:test2.py:Epoch 30/100	Loss 10.6599 ± 0.1108
INFO:test2.py:Epoch 31/100	Loss 10.6569 ± 0.1109
INFO:test2.py:Epoch 32/100	Loss 10.6541 ± 0.1108
INFO:test2.py:Epoch 33/100	Loss 10.6513 ± 0.1115
INFO:test2.py:Epoch 34/100	Loss 10.6487 ± 0.1103
INFO:test2.py:Epoch 35/100	Loss 10.6461 ± 0.1107
INFO:test2.py:Epoch 36/100	Loss 10.6437 ± 0.1109
INFO:test2.py:Epoch 37/100	Loss 10.6412 ± 0.1109
INFO:test2.py:Epoch 38/100	Loss 10.6389 ± 0.1108
INFO:test2.py:Epoch 39/100	Loss 10.6367 ± 0.1102
INFO:test2.py:Epoch 40/100	Loss 10.6345 ± 0.1103
INFO:test2.py:Epoch 41/100	Loss 10.6324 ± 0.1111
INFO:test2.py:Epoch 42/100	Loss 10.6303 ± 0.1099
INFO:test2.py:Epoch 43/100	Loss 10.6283 ± 0.1105
INFO:test2.py:Epoch 44/100	Loss 10.6264 ± 0.1101
INFO:test2.py:Epoch 45/100	Loss 10.6245 ± 0.1100
INFO:test2.py:Epoch 46/100	Loss 10.6226 ± 0.1102
INFO:test2.py:Epoch 47/100	Loss 10.6209 ± 0.1103
INFO:test2.py:Epoch 48/100	Loss 10.6191 ± 0.1102
INFO:test2.py:Epoch 49/100	Loss 10.6174 ± 0.1099
INFO:test2.py:Validating
INFO:test2.py:batch start 	80000
INFO:test2.py:batch start 	160000
INFO:test2.py:batch start 	240000
INFO:test2.py:batch start 	320000
INFO:test2.py:batch start 	400000
INFO:test2.py:done
INFO:test2.py:metrics done
INFO:test2.py:Epoch 50/100	Loss 10.6158 ± 0.1106
INFO:test2.py:Epoch 51/100	Loss 10.6142 ± 0.1101
INFO:test2.py:Epoch 52/100	Loss 10.6126 ± 0.1101
INFO:test2.py:Epoch 53/100	Loss 10.6111 ± 0.1098
INFO:test2.py:Epoch 54/100	Loss 10.6096 ± 0.1106
INFO:test2.py:Epoch 55/100	Loss 10.6082 ± 0.1102
INFO:test2.py:Epoch 56/100	Loss 10.6068 ± 0.1107
INFO:test2.py:Epoch 57/100	Loss 10.6054 ± 0.1097
INFO:test2.py:Epoch 58/100	Loss 10.6040 ± 0.1097
INFO:test2.py:Epoch 59/100	Loss 10.6027 ± 0.1100
INFO:test2.py:Epoch 60/100	Loss 10.6014 ± 0.1101
INFO:test2.py:Epoch 61/100	Loss 10.6002 ± 0.1101
INFO:test2.py:Epoch 62/100	Loss 10.5990 ± 0.1097
INFO:test2.py:Epoch 63/100	Loss 10.5978 ± 0.1097
INFO:test2.py:Epoch 64/100	Loss 10.5966 ± 0.1099
INFO:test2.py:Epoch 65/100	Loss 10.5954 ± 0.1099
INFO:test2.py:Epoch 66/100	Loss 10.5943 ± 0.1103
INFO:test2.py:Epoch 67/100	Loss 10.5932 ± 0.1105
INFO:test2.py:Epoch 68/100	Loss 10.5922 ± 0.1100
INFO:test2.py:Epoch 69/100	Loss 10.5911 ± 0.1102
INFO:test2.py:Epoch 70/100	Loss 10.5901 ± 0.1095
INFO:test2.py:Epoch 71/100	Loss 10.5891 ± 0.1100
INFO:test2.py:Epoch 72/100	Loss 10.5881 ± 0.1099
INFO:test2.py:Epoch 73/100	Loss 10.5871 ± 0.1100
INFO:test2.py:Epoch 74/100	Loss 10.5862 ± 0.1102
INFO:test2.py:Epoch 75/100	Loss 10.5852 ± 0.1104
INFO:test2.py:Epoch 76/100	Loss 10.5843 ± 0.1104
INFO:test2.py:Epoch 77/100	Loss 10.5834 ± 0.1089
INFO:test2.py:Epoch 78/100	Loss 10.5825 ± 0.1105
INFO:test2.py:Epoch 79/100	Loss 10.5817 ± 0.1098
INFO:test2.py:Epoch 80/100	Loss 10.5808 ± 0.1097
INFO:test2.py:Epoch 81/100	Loss 10.5800 ± 0.1094
INFO:test2.py:Epoch 82/100	Loss 10.5792 ± 0.1098
INFO:test2.py:Epoch 83/100	Loss 10.5784 ± 0.1100
INFO:test2.py:Epoch 84/100	Loss 10.5776 ± 0.1109
INFO:test2.py:Epoch 85/100	Loss 10.5768 ± 0.1095
INFO:test2.py:Epoch 86/100	Loss 10.5761 ± 0.1094
INFO:test2.py:Epoch 87/100	Loss 10.5753 ± 0.1098
INFO:test2.py:Epoch 88/100	Loss 10.5746 ± 0.1091
INFO:test2.py:Epoch 89/100	Loss 10.5739 ± 0.1090
INFO:test2.py:Epoch 90/100	Loss 10.5731 ± 0.1089
INFO:test2.py:Epoch 91/100	Loss 10.5724 ± 0.1099
INFO:test2.py:Epoch 92/100	Loss 10.5718 ± 0.1094
INFO:test2.py:Epoch 93/100	Loss 10.5711 ± 0.1087
INFO:test2.py:Epoch 94/100	Loss 10.5704 ± 0.1091
INFO:test2.py:Epoch 95/100	Loss 10.5698 ± 0.1102
INFO:test2.py:Epoch 96/100	Loss 10.5691 ± 0.1098
INFO:test2.py:Epoch 97/100	Loss 10.5685 ± 0.1092
INFO:test2.py:Epoch 98/100	Loss 10.5679 ± 0.1096
INFO:test2.py:Epoch 99/100	Loss 10.5673 ± 0.1088
INFO:test2.py:Epoch 100/100	Loss 10.5667 ± 0.1102
INFO:test2.py:is bad performing False
INFO:test2.py:Done training
INFO:test2.py:in evalute for dataset: 	valid
INFO:test2.py:batch start 	80000
INFO:test2.py:batch start 	160000
INFO:test2.py:batch start 	240000
INFO:test2.py:batch start 	320000
INFO:test2.py:batch start 	400000
INFO:test2.py:done
INFO:test2.py:metrics done
INFO:test2.py:Error 	valid results	MRR 0.121203	H@1 0.046416	H@3 0.111790	H@10 0.266646	AU-ROC_raw -1.000000	AU-ROC_fil -1.000000
INFO:test2.py:in evalute for dataset: 	test
INFO:test2.py:batch start 	80000
INFO:test2.py:batch start 	160000
INFO:test2.py:batch start 	240000
INFO:test2.py:batch start 	320000
INFO:test2.py:batch start 	400000
INFO:test2.py:done
INFO:test2.py:metrics done
INFO:test2.py:Error 	test results	MRR 0.121702	H@1 0.046677	H@3 0.112602	H@10 0.267507	AU-ROC_raw -1.000000	AU-ROC_fil -1.000000
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
