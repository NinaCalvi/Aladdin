./test2.py --data pse --mcl True --batch-size 128 --epochs 100 --embedding-size 200 --learning-rate 0.01 --regulariser n3 --reg-weight 0.005 --optimizer adagrad --valid --quiet
MCL True
INFO:test2.py:Valid: True
INFO:test2.py:Device: cuda
curr directory /home/acalvi/Dissertation/Aladdin/biolink
Importing dataset files ... 
<class 'biolink.embeddings.models_mc.ComplEx_MC'>
INFO:test2.py:is tucker False
INFO:test2.py:settin tucker to FALSE
INFO:test2.py:Device: cuda
INFO:test2.py:Epoch 1/100	Loss 11.0326 ± 0.3358
INFO:test2.py:Epoch 2/100	Loss 10.6993 ± 0.1191
INFO:test2.py:Epoch 3/100	Loss 10.6126 ± 0.1144
INFO:test2.py:Epoch 4/100	Loss 10.5662 ± 0.1140
INFO:test2.py:Epoch 5/100	Loss 10.5350 ± 0.1146
INFO:test2.py:Epoch 6/100	Loss 10.5114 ± 0.1144
INFO:test2.py:Epoch 7/100	Loss 10.4925 ± 0.1133
INFO:test2.py:Epoch 8/100	Loss 10.4766 ± 0.1143
INFO:test2.py:Epoch 9/100	Loss 10.4628 ± 0.1145
INFO:test2.py:Epoch 10/100	Loss 10.4506 ± 0.1145
INFO:test2.py:Epoch 11/100	Loss 10.4397 ± 0.1141
INFO:test2.py:Epoch 12/100	Loss 10.4298 ± 0.1147
INFO:test2.py:Epoch 13/100	Loss 10.4208 ± 0.1139
INFO:test2.py:Epoch 14/100	Loss 10.4124 ± 0.1139
INFO:test2.py:Epoch 15/100	Loss 10.4048 ± 0.1145
INFO:test2.py:Epoch 16/100	Loss 10.3976 ± 0.1145
INFO:test2.py:Epoch 17/100	Loss 10.3909 ± 0.1139
INFO:test2.py:Epoch 18/100	Loss 10.3847 ± 0.1137
INFO:test2.py:Epoch 19/100	Loss 10.3788 ± 0.1133
INFO:test2.py:Epoch 20/100	Loss 10.3733 ± 0.1149
INFO:test2.py:Epoch 21/100	Loss 10.3681 ± 0.1137
INFO:test2.py:Epoch 22/100	Loss 10.3632 ± 0.1144
INFO:test2.py:Epoch 23/100	Loss 10.3585 ± 0.1150
INFO:test2.py:Epoch 24/100	Loss 10.3541 ± 0.1147
INFO:test2.py:Epoch 25/100	Loss 10.3499 ± 0.1152
INFO:test2.py:Epoch 26/100	Loss 10.3459 ± 0.1155
INFO:test2.py:Epoch 27/100	Loss 10.3420 ± 0.1150
INFO:test2.py:Epoch 28/100	Loss 10.3384 ± 0.1146
INFO:test2.py:Epoch 29/100	Loss 10.3349 ± 0.1135
INFO:test2.py:Epoch 30/100	Loss 10.3316 ± 0.1141
INFO:test2.py:Epoch 31/100	Loss 10.3284 ± 0.1156
INFO:test2.py:Epoch 32/100	Loss 10.3253 ± 0.1135
INFO:test2.py:Epoch 33/100	Loss 10.3223 ± 0.1144
INFO:test2.py:Epoch 34/100	Loss 10.3195 ± 0.1141
INFO:test2.py:Epoch 35/100	Loss 10.3168 ± 0.1144
INFO:test2.py:Epoch 36/100	Loss 10.3141 ± 0.1150
INFO:test2.py:Epoch 37/100	Loss 10.3116 ± 0.1146
INFO:test2.py:Epoch 38/100	Loss 10.3092 ± 0.1141
INFO:test2.py:Epoch 39/100	Loss 10.3068 ± 0.1136
INFO:test2.py:Epoch 40/100	Loss 10.3045 ± 0.1148
INFO:test2.py:Epoch 41/100	Loss 10.3023 ± 0.1141
INFO:test2.py:Epoch 42/100	Loss 10.3002 ± 0.1146
INFO:test2.py:Epoch 43/100	Loss 10.2981 ± 0.1141
INFO:test2.py:Epoch 44/100	Loss 10.2961 ± 0.1143
INFO:test2.py:Epoch 45/100	Loss 10.2942 ± 0.1143
INFO:test2.py:Epoch 46/100	Loss 10.2923 ± 0.1139
INFO:test2.py:Epoch 47/100	Loss 10.2905 ± 0.1142
INFO:test2.py:Epoch 48/100	Loss 10.2887 ± 0.1143
INFO:test2.py:Epoch 49/100	Loss 10.2870 ± 0.1142
INFO:test2.py:Validating
INFO:test2.py:batch start 	80000
INFO:test2.py:batch start 	160000
INFO:test2.py:batch start 	240000
INFO:test2.py:batch start 	320000
INFO:test2.py:batch start 	400000
INFO:test2.py:done
INFO:test2.py:metrics done
INFO:test2.py:Epoch 50/100	Loss 10.2853 ± 0.1145
INFO:test2.py:Epoch 51/100	Loss 10.2837 ± 0.1144
INFO:test2.py:Epoch 52/100	Loss 10.2821 ± 0.1148
INFO:test2.py:Epoch 53/100	Loss 10.2805 ± 0.1146
INFO:test2.py:Epoch 54/100	Loss 10.2790 ± 0.1147
INFO:test2.py:Epoch 55/100	Loss 10.2776 ± 0.1144
INFO:test2.py:Epoch 56/100	Loss 10.2762 ± 0.1157
INFO:test2.py:Epoch 57/100	Loss 10.2748 ± 0.1136
INFO:test2.py:Epoch 58/100	Loss 10.2734 ± 0.1144
INFO:test2.py:Epoch 59/100	Loss 10.2721 ± 0.1150
INFO:test2.py:Epoch 60/100	Loss 10.2708 ± 0.1144
INFO:test2.py:Epoch 61/100	Loss 10.2695 ± 0.1147
INFO:test2.py:Epoch 62/100	Loss 10.2683 ± 0.1140
INFO:test2.py:Epoch 63/100	Loss 10.2671 ± 0.1141
INFO:test2.py:Epoch 64/100	Loss 10.2659 ± 0.1152
INFO:test2.py:Epoch 65/100	Loss 10.2648 ± 0.1147
INFO:test2.py:Epoch 66/100	Loss 10.2636 ± 0.1143
INFO:test2.py:Epoch 67/100	Loss 10.2625 ± 0.1139
INFO:test2.py:Epoch 68/100	Loss 10.2615 ± 0.1145
INFO:test2.py:Epoch 69/100	Loss 10.2604 ± 0.1164
INFO:test2.py:Epoch 70/100	Loss 10.2594 ± 0.1146
INFO:test2.py:Epoch 71/100	Loss 10.2583 ± 0.1147
INFO:test2.py:Epoch 72/100	Loss 10.2573 ± 0.1144
INFO:test2.py:Epoch 73/100	Loss 10.2564 ± 0.1143
INFO:test2.py:Epoch 74/100	Loss 10.2554 ± 0.1144
INFO:test2.py:Epoch 75/100	Loss 10.2545 ± 0.1144
INFO:test2.py:Epoch 76/100	Loss 10.2536 ± 0.1152
INFO:test2.py:Epoch 77/100	Loss 10.2527 ± 0.1156
INFO:test2.py:Epoch 78/100	Loss 10.2518 ± 0.1153
INFO:test2.py:Epoch 79/100	Loss 10.2509 ± 0.1151
INFO:test2.py:Epoch 80/100	Loss 10.2500 ± 0.1147
INFO:test2.py:Epoch 81/100	Loss 10.2492 ± 0.1147
INFO:test2.py:Epoch 82/100	Loss 10.2484 ± 0.1139
INFO:test2.py:Epoch 83/100	Loss 10.2476 ± 0.1136
INFO:test2.py:Epoch 84/100	Loss 10.2468 ± 0.1156
INFO:test2.py:Epoch 85/100	Loss 10.2460 ± 0.1143
INFO:test2.py:Epoch 86/100	Loss 10.2452 ± 0.1147
INFO:test2.py:Epoch 87/100	Loss 10.2445 ± 0.1147
INFO:test2.py:Epoch 88/100	Loss 10.2437 ± 0.1159
INFO:test2.py:Epoch 89/100	Loss 10.2430 ± 0.1150
INFO:test2.py:Epoch 90/100	Loss 10.2423 ± 0.1149
INFO:test2.py:Epoch 91/100	Loss 10.2416 ± 0.1154
INFO:test2.py:Epoch 92/100	Loss 10.2409 ± 0.1147
INFO:test2.py:Epoch 93/100	Loss 10.2402 ± 0.1146
INFO:test2.py:Epoch 94/100	Loss 10.2395 ± 0.1155
INFO:test2.py:Epoch 95/100	Loss 10.2388 ± 0.1145
INFO:test2.py:Epoch 96/100	Loss 10.2382 ± 0.1144
INFO:test2.py:Epoch 97/100	Loss 10.2375 ± 0.1154
INFO:test2.py:Epoch 98/100	Loss 10.2369 ± 0.1148
INFO:test2.py:Epoch 99/100	Loss 10.2363 ± 0.1154
INFO:test2.py:Epoch 100/100	Loss 10.2357 ± 0.1146
INFO:test2.py:is bad performing False
INFO:test2.py:Done training
INFO:test2.py:in evalute for dataset: 	valid
INFO:test2.py:batch start 	80000
INFO:test2.py:batch start 	160000
INFO:test2.py:batch start 	240000
INFO:test2.py:batch start 	320000
INFO:test2.py:batch start 	400000
INFO:test2.py:done
INFO:test2.py:metrics done
INFO:test2.py:Error 	valid results	MRR 0.136122	H@1 0.056166	H@3 0.129634	H@10 0.294560	AU-ROC_raw -1.000000	AU-ROC_fil -1.000000
INFO:test2.py:in evalute for dataset: 	test
INFO:test2.py:batch start 	80000
INFO:test2.py:batch start 	160000
INFO:test2.py:batch start 	240000
INFO:test2.py:batch start 	320000
INFO:test2.py:batch start 	400000
INFO:test2.py:done
INFO:test2.py:metrics done
INFO:test2.py:Error 	test results	MRR 0.136596	H@1 0.056665	H@3 0.130048	H@10 0.294834	AU-ROC_raw -1.000000	AU-ROC_fil -1.000000
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
