./test2.py --data pse --mcl True --batch-size 128 --epochs 100 --embedding-size 100 --learning-rate 0.01 --regulariser n3 --reg-weight 0.005 --optimizer adagrad --valid --quiet
MCL True
INFO:test2.py:Valid: True
INFO:test2.py:Device: cuda
curr directory /home/acalvi/Dissertation/Aladdin/biolink
Importing dataset files ... 
<class 'biolink.embeddings.models_mc.ComplEx_MC'>
INFO:test2.py:is tucker False
INFO:test2.py:settin tucker to FALSE
INFO:test2.py:Device: cuda
INFO:test2.py:Epoch 1/100	Loss 11.1594 ± 0.3322
INFO:test2.py:Epoch 2/100	Loss 10.8436 ± 0.1203
INFO:test2.py:Epoch 3/100	Loss 10.7620 ± 0.1156
INFO:test2.py:Epoch 4/100	Loss 10.7183 ± 0.1152
INFO:test2.py:Epoch 5/100	Loss 10.6881 ± 0.1146
INFO:test2.py:Epoch 6/100	Loss 10.6646 ± 0.1145
INFO:test2.py:Epoch 7/100	Loss 10.6449 ± 0.1148
INFO:test2.py:Epoch 8/100	Loss 10.6278 ± 0.1150
INFO:test2.py:Epoch 9/100	Loss 10.6125 ± 0.1145
INFO:test2.py:Epoch 10/100	Loss 10.5987 ± 0.1152
INFO:test2.py:Epoch 11/100	Loss 10.5862 ± 0.1147
INFO:test2.py:Epoch 12/100	Loss 10.5747 ± 0.1143
INFO:test2.py:Epoch 13/100	Loss 10.5641 ± 0.1149
INFO:test2.py:Epoch 14/100	Loss 10.5544 ± 0.1144
INFO:test2.py:Epoch 15/100	Loss 10.5452 ± 0.1138
INFO:test2.py:Epoch 16/100	Loss 10.5367 ± 0.1140
INFO:test2.py:Epoch 17/100	Loss 10.5288 ± 0.1139
INFO:test2.py:Epoch 18/100	Loss 10.5213 ± 0.1148
INFO:test2.py:Epoch 19/100	Loss 10.5143 ± 0.1141
INFO:test2.py:Epoch 20/100	Loss 10.5077 ± 0.1145
INFO:test2.py:Epoch 21/100	Loss 10.5014 ± 0.1145
INFO:test2.py:Epoch 22/100	Loss 10.4955 ± 0.1144
INFO:test2.py:Epoch 23/100	Loss 10.4899 ± 0.1139
INFO:test2.py:Epoch 24/100	Loss 10.4845 ± 0.1139
INFO:test2.py:Epoch 25/100	Loss 10.4795 ± 0.1139
INFO:test2.py:Epoch 26/100	Loss 10.4746 ± 0.1142
INFO:test2.py:Epoch 27/100	Loss 10.4700 ± 0.1144
INFO:test2.py:Epoch 28/100	Loss 10.4655 ± 0.1140
INFO:test2.py:Epoch 29/100	Loss 10.4613 ± 0.1134
INFO:test2.py:Epoch 30/100	Loss 10.4573 ± 0.1139
INFO:test2.py:Epoch 31/100	Loss 10.4534 ± 0.1138
INFO:test2.py:Epoch 32/100	Loss 10.4496 ± 0.1139
INFO:test2.py:Epoch 33/100	Loss 10.4461 ± 0.1143
INFO:test2.py:Epoch 34/100	Loss 10.4426 ± 0.1135
INFO:test2.py:Epoch 35/100	Loss 10.4393 ± 0.1142
INFO:test2.py:Epoch 36/100	Loss 10.4361 ± 0.1140
INFO:test2.py:Epoch 37/100	Loss 10.4330 ± 0.1140
INFO:test2.py:Epoch 38/100	Loss 10.4301 ± 0.1146
INFO:test2.py:Epoch 39/100	Loss 10.4272 ± 0.1135
INFO:test2.py:Epoch 40/100	Loss 10.4244 ± 0.1137
INFO:test2.py:Epoch 41/100	Loss 10.4218 ± 0.1148
INFO:test2.py:Epoch 42/100	Loss 10.4192 ± 0.1135
INFO:test2.py:Epoch 43/100	Loss 10.4167 ± 0.1142
INFO:test2.py:Epoch 44/100	Loss 10.4143 ± 0.1135
INFO:test2.py:Epoch 45/100	Loss 10.4119 ± 0.1138
INFO:test2.py:Epoch 46/100	Loss 10.4097 ± 0.1139
INFO:test2.py:Epoch 47/100	Loss 10.4075 ± 0.1140
INFO:test2.py:Epoch 48/100	Loss 10.4053 ± 0.1139
INFO:test2.py:Epoch 49/100	Loss 10.4033 ± 0.1143
INFO:test2.py:Validating
INFO:test2.py:batch start 	80000
INFO:test2.py:batch start 	160000
INFO:test2.py:batch start 	240000
INFO:test2.py:batch start 	320000
INFO:test2.py:batch start 	400000
INFO:test2.py:done
INFO:test2.py:metrics done
INFO:test2.py:Epoch 50/100	Loss 10.4013 ± 0.1145
INFO:test2.py:Epoch 51/100	Loss 10.3993 ± 0.1140
INFO:test2.py:Epoch 52/100	Loss 10.3974 ± 0.1141
INFO:test2.py:Epoch 53/100	Loss 10.3956 ± 0.1141
INFO:test2.py:Epoch 54/100	Loss 10.3938 ± 0.1146
INFO:test2.py:Epoch 55/100	Loss 10.3920 ± 0.1144
INFO:test2.py:Epoch 56/100	Loss 10.3903 ± 0.1147
INFO:test2.py:Epoch 57/100	Loss 10.3887 ± 0.1140
INFO:test2.py:Epoch 58/100	Loss 10.3871 ± 0.1146
INFO:test2.py:Epoch 59/100	Loss 10.3855 ± 0.1144
INFO:test2.py:Epoch 60/100	Loss 10.3840 ± 0.1142
INFO:test2.py:Epoch 61/100	Loss 10.3825 ± 0.1139
INFO:test2.py:Epoch 62/100	Loss 10.3810 ± 0.1141
INFO:test2.py:Epoch 63/100	Loss 10.3796 ± 0.1142
INFO:test2.py:Epoch 64/100	Loss 10.3782 ± 0.1144
INFO:test2.py:Epoch 65/100	Loss 10.3768 ± 0.1143
INFO:test2.py:Epoch 66/100	Loss 10.3755 ± 0.1148
INFO:test2.py:Epoch 67/100	Loss 10.3742 ± 0.1151
INFO:test2.py:Epoch 68/100	Loss 10.3730 ± 0.1141
INFO:test2.py:Epoch 69/100	Loss 10.3717 ± 0.1151
INFO:test2.py:Epoch 70/100	Loss 10.3705 ± 0.1140
INFO:test2.py:Epoch 71/100	Loss 10.3693 ± 0.1148
INFO:test2.py:Epoch 72/100	Loss 10.3682 ± 0.1145
INFO:test2.py:Epoch 73/100	Loss 10.3670 ± 0.1145
INFO:test2.py:Epoch 74/100	Loss 10.3659 ± 0.1150
INFO:test2.py:Epoch 75/100	Loss 10.3648 ± 0.1148
INFO:test2.py:Epoch 76/100	Loss 10.3638 ± 0.1150
INFO:test2.py:Epoch 77/100	Loss 10.3627 ± 0.1134
INFO:test2.py:Epoch 78/100	Loss 10.3617 ± 0.1155
INFO:test2.py:Epoch 79/100	Loss 10.3607 ± 0.1150
INFO:test2.py:Epoch 80/100	Loss 10.3597 ± 0.1142
INFO:test2.py:Epoch 81/100	Loss 10.3588 ± 0.1144
INFO:test2.py:Epoch 82/100	Loss 10.3578 ± 0.1146
INFO:test2.py:Epoch 83/100	Loss 10.3569 ± 0.1144
INFO:test2.py:Epoch 84/100	Loss 10.3560 ± 0.1160
INFO:test2.py:Epoch 85/100	Loss 10.3551 ± 0.1145
INFO:test2.py:Epoch 86/100	Loss 10.3542 ± 0.1141
INFO:test2.py:Epoch 87/100	Loss 10.3534 ± 0.1148
INFO:test2.py:Epoch 88/100	Loss 10.3525 ± 0.1141
INFO:test2.py:Epoch 89/100	Loss 10.3517 ± 0.1142
INFO:test2.py:Epoch 90/100	Loss 10.3509 ± 0.1142
INFO:test2.py:Epoch 91/100	Loss 10.3501 ± 0.1149
INFO:test2.py:Epoch 92/100	Loss 10.3493 ± 0.1145
INFO:test2.py:Epoch 93/100	Loss 10.3485 ± 0.1135
INFO:test2.py:Epoch 94/100	Loss 10.3477 ± 0.1144
INFO:test2.py:Epoch 95/100	Loss 10.3470 ± 0.1147
INFO:test2.py:Epoch 96/100	Loss 10.3463 ± 0.1148
INFO:test2.py:Epoch 97/100	Loss 10.3455 ± 0.1143
INFO:test2.py:Epoch 98/100	Loss 10.3448 ± 0.1149
INFO:test2.py:Epoch 99/100	Loss 10.3441 ± 0.1140
INFO:test2.py:Epoch 100/100	Loss 10.3434 ± 0.1150
INFO:test2.py:is bad performing False
INFO:test2.py:Done training
INFO:test2.py:in evalute for dataset: 	valid
INFO:test2.py:batch start 	80000
INFO:test2.py:batch start 	160000
INFO:test2.py:batch start 	240000
INFO:test2.py:batch start 	320000
INFO:test2.py:batch start 	400000
INFO:test2.py:done
INFO:test2.py:metrics done
INFO:test2.py:Error 	valid results	MRR 0.125993	H@1 0.049494	H@3 0.117564	H@10 0.275972	AU-ROC_raw -1.000000	AU-ROC_fil -1.000000
INFO:test2.py:in evalute for dataset: 	test
INFO:test2.py:batch start 	80000
INFO:test2.py:batch start 	160000
INFO:test2.py:batch start 	240000
INFO:test2.py:batch start 	320000
INFO:test2.py:batch start 	400000
INFO:test2.py:done
INFO:test2.py:metrics done
INFO:test2.py:Error 	test results	MRR 0.126294	H@1 0.049682	H@3 0.118054	H@10 0.276321	AU-ROC_raw -1.000000	AU-ROC_fil -1.000000
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/home/acalvi/anaconda3/envs/libkge_new/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
